{"version":3,"file":"static/js/main.6ecc9c9d.js","mappings":"mBAAO,MCCDA,EAAa,OAQbC,EAAa,IAAIC,aAAaC,OAAO,CACzCC,MAAOC,OACPC,SAAUD,OACVE,KAAMF,SAGRJ,EAAWO,QAAQC,aAAeC,eAAgBC,GAChD,aAAaC,KAAKC,MAAMb,GAAYc,OAAOH,EAC7C,EAEA,MCdA,EDceT,aAAaW,MAAMb,EAAYC,GEhBjCQ,EAAeC,MAAOK,EAASC,KAC3C,IACC,MAAMC,OCHoBP,gBAEdQ,EAAKT,aAAaU,GDCXC,CAAyBL,EAAQM,MACpDL,EAASM,OHNK,KGMsBC,KAAKN,EAC1C,CAAE,MAAOO,GACRR,EAASM,OHEwB,KGD/BC,KAAK,CAACE,QAASD,GAClB,GERYE,EAASC,UACtBD,EAAOE,IAAIC,WAAWN,QACtBG,EAAOE,IAAIC,WAAWC,WAAW,CAAEC,UAAU,KAC7CL,EAAOE,IAAII,QAOXN,EAAOO,KAAK,aAAa,CAAClB,EAASC,KACjCkB,EAAyBnB,EAASC,EAAS,IANlB,WACzBmB,QAAQC,IAAI,kCACZC,OAASX,EAAOY,OAAO,MAAM,QAC/B,CCRAZ,E","sources":["constants/HttpStatusCodes.js","db/mongodb/schema/UserSchema.js","model/mongodb/User.js","handlers/UserHandler.js","services/UserService.js","routes/routes.js","index.js"],"sourcesContent":["export const OK=200;\r\n\r\nexport const BAD_REQUEST=400;\r\n\r\nexport const UNAUTHORIZED=401;\r\n\r\nexport const NOT_FOUND=404;\r\n\r\nexport const FORBIDDEN=403;\r\n\r\nexport const INTERNAL_SERVER_ERROR=500;","// import { db } from \"..\";\r\nconst USER_MODEL = \"User\";\r\n// const dbConnection = db.get();\r\n// const UserSchema = new dbConnection.Schema({\r\n//   email: dbConnection.Schema.Types.String,\r\n//   password: dbConnection.Schema.Types.String,\r\n//   role: dbConnection.Schema.Types.String,\r\n// });\r\n\r\nconst UserSchema = new dbConnection.Schema({\r\n  email: String,\r\n  password: String,\r\n  role: String,\r\n});\r\n\r\nUserSchema.statics.userRegister = async function (userObj) {\r\n  return await this.model(USER_MODEL).create(userObj);\r\n};\r\n\r\nexport default dbConnection.model(USER_MODEL, UserSchema);\r\n","import { UserSchema } from \"../../db/mongodb/schema\";\r\n\r\n\r\nconst User = UserSchema\r\n\r\nexport default User;\r\n","import {HttpStatusCodes} from '../constants';\r\nimport {UserService} from '../services';\r\n\r\nexport const userRegister = async (request, response) => {\r\n\ttry {\r\n\t\tconst user = await UserService.userRegister(request.body);\r\n\t\tresponse.status(HttpStatusCodes.OK).json(user);\r\n\t} catch (error) {\r\n\t\tresponse.status(HttpStatusCodes.INTERNAL_SERVER_ERROR)\r\n\t\t\t.json({message: error});\r\n\t}\r\n};\r\n","import {User} from '../model'\r\n\r\nexport const userRegister = async (registerObj) => {\r\n\t\r\n\treturn await User.userRegister(registerObj);\r\n};","import { UserHandler } from \"../handlers\";\r\n\r\nexport const routes = express();\r\nroutes.use(bodyParser.json());\r\nroutes.use(bodyParser.urlencoded({ extended: false }));\r\nroutes.use(cors());\r\n\r\nexport const startServer = (port = 3004) => {\r\n  console.log(\"Server started successfully...\");\r\n  server = routes.listen(3004, () => {});\r\n};\r\n\r\nroutes.post(\"/register\", (request, response) => {\r\n  UserHandler.userRegister(request, response);\r\n});\r\n","import { routes } from \"./routes\";\r\n\r\nroutes.startServer();\r\n"],"names":["USER_MODEL","UserSchema","dbConnection","Schema","email","String","password","role","statics","userRegister","async","userObj","this","model","create","request","response","user","User","registerObj","UserService","body","status","json","error","message","routes","express","use","bodyParser","urlencoded","extended","cors","post","UserHandler","console","log","server","listen"],"sourceRoot":""}